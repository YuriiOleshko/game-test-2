{"version":3,"sources":["assets/img/game/volume.svg","assets/music/533354__snapper4298__intro-outro-sequence-90bpm.wav","components/HeaderGame/HeaderGame.js","components/Game/data.js","contex/Contex.js","components/Timer/Timer.js","components/PanelRigth/ItemRigth.js","components/PanelRigth/PanelRigth.js","components/QuestPanel/QuestPanel.js","components/Modal/Modal.js","components/Game/Game.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","HeaderGame","useState","open","setOpen","sound","setSound","cx","classNames","bind","style","useSound","sounds","play","stop","useEffect","soundClassName","header__volum","header__volum_click","burgerClassName","header__line","header__line__open","className","onClick","src","volume","data","question","answer","text","ball","GraphListContext","createContext","Context","children","seconds","setSeconds","isActive","setIsActive","countStep","setCountStep","arrGame","totalBals","setBalls","activeAnswer","setAnswer","showModal","setShowModal","a","length","Provider","value","updTimer","countBalls","str","Number","changeAnswer","changeActive","reset","Timer","useContext","interval","setInterval","clearInterval","ItemRigth","count","step","PanelRigth","React","memo","map","el","index","key","nanoid","QuestPanel","ev","target","classList","add","clickAnswer","data-ball","Modal","Math","floor","console","log","to","Game","App","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.65089335.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/volume.2724d6c5.svg\";","module.exports = __webpack_public_path__ + \"static/media/533354__snapper4298__intro-outro-sequence-90bpm.6ce75567.wav\";","import React, { useState,useEffect } from 'react';\nimport { ReactSVG } from 'react-svg';\nimport classNames from 'classnames/bind';\nimport useSound from 'use-sound';\nimport style from '../../styles/Main.scss';\nimport volume from '../../assets/img/game/volume.svg';\nimport sounds from '../../assets/music/533354__snapper4298__intro-outro-sequence-90bpm.wav';\n// svg\nconst HeaderGame = () => {\n  const [open, setOpen] = useState(false);\n  const [sound, setSound] = useState(false);\n\n  const cx = classNames.bind(style);\n\n  const [play, { stop }] = useSound(sounds);\n\n  useEffect(() => {\n    sound ? play() : stop()\n\n  }, [sound]);\n\n  const soundClassName = cx({\n    header__volum: true,\n    header__volum_click: sound,\n  });\n  const burgerClassName = cx({\n    header__line: true,\n    header__line__open: open,\n  });\n  return (\n    <header className=\"header\">\n      <div className=\"header__wrapper container\">\n        <div\n          className={soundClassName}\n          onClick={() => setSound(!sound)}\n        >\n          <ReactSVG src={volume} />\n        </div>\n        <div className=\"header__burger\" onClick={() => setOpen(!open)}>\n          <div className={burgerClassName} />\n          <div className={burgerClassName} />\n        </div>\n      </div>\n\n    </header>\n  );\n};\n\nexport default HeaderGame;\n","export const data = [\n  {\n    question: 'Зачем тебе это надо? Проекты какие-то еще придумываешь! Лучше учись нормально!',\n    answer: [{ text: 'отстань, я знаю, что мне лучше ', ball: '3' }, {\n      text: 'а хочешь мне помочь?',\n      ball: '2',\n    }, {\n      text: 'завтра у нас мероприятие, приходи, будет здорово! ',\n      ball: '1',\n    }, { text: 'я как раз хочу спросить у тебя один совет!', ball: '4' }],\n  },\n  {\n    question: ' Какой проект? А бабушке помочь на даче? ',\n    answer: [{\n      text: 'ну мам/пап ',\n      ball: '3',\n    }, {\n      text: '{мы с бабушкой уже договорились на другой день. Я обязательно помогу.',\n      ball: '2',\n    }, { text: 'а я уже (но это неправда)', ball: '1' }, { text: 'потом помогу', ball: '4' }],\n  },\n  {\n    question: ' Фигня какая-то твой проект! ',\n    answer: [{ text: 'давай я объясню, почему для меня это важно ', ball: '3' }, {\n      text: 'сам ты фигня',\n      ball: '2',\n    }, {\n      text: 'а что именно фигня? Что именно не нравится? ',\n      ball: '1',\n    }, { text: 'ты еще даже не видел/а, а уже делаешь выводы', ball: '4' }],\n  },\n  {\n    question: 'Проектами сыт не будешь! Лучше в стройотряд иди – там хоть платят! ',\n    answer: [{\n      text: 'деньги – не главное! ',\n      ball: '3',\n    }, {\n      text: '{это опыт, который позволит в будущем мне зарабатывать много',\n      ball: '2',\n    }, {\n      text: 'это добавит дополнительных баллов в мое портфолио при поступлении в ВУЗ ',\n      ball: '1',\n    }, { text: 'тебе надо – ты и иди', ball: '4' }],\n  },\n  {\n    question: 'Ты не будешь делать этот проект! У тебя нет на это времени! У тебя танцы, пение, английский и баскетбол! ',\n    answer: [{\n      text: 'это мое время и я лучше знаю, как мне его распределять ',\n      ball: '3',\n    }, {\n      text: '{я знаю как распределять свое время. Хочешь, расскажу тебе как?',\n      ball: '2',\n    }, {\n      text: 'почему ты распоряжаешься моим временем? ',\n      ball: '1',\n    }, { text: 'для меня этот проект важен и я хочу выделить для него время!', ball: '4' }],\n  },\n  {\n    question: 'Ой, эти проекты отнимают так много сил! Лучше отдохни! Успеешь в своей жизни еще поработать! ',\n    answer: [{ text: 'ну мааааам, пааааап ', ball: '3' }, {\n      text: '{да, точно! Лучше полежу и посмотрю телек',\n      ball: '2',\n    }, { text: 'я хочу попробовать! ', ball: '1' }, {\n      text: 'приходи завтра на мероприятие! Будет здорово!',\n      ball: '4',\n    }],\n  },\n  {\n    question: 'У тебя ЕГЭ на носу, а ты какие-то проекты собираешься делать? ',\n    answer: [{ text: 'я все успею ', ball: '3' }, {\n      text: '{хочешь мне помочь?',\n      ball: '2',\n    }, { text: 'ЕГЭ - не главное ', ball: '1' }, { text: 'да сдам я этот ЕГЭ', ball: '4' }],\n  },\n  {\n    question: 'Проект? Будешь этим заниматься - нового телефона не получишь! ',\n    answer: [{ text: 'это же шантаж! И довольно примитивный ', ball: '3' }, {\n      text: '{мне не нужен новый телефон',\n      ball: '2',\n    }, { text: 'а при чем тут телефон вообще? ', ball: '1' }, { text: 'может хотите мне помочь?', ball: '4' }],\n  },\n];\n","import React, { createContext, useState } from 'react';\nimport { data } from '../components/Game/data';\n\nconst GraphListContext = createContext();\n\nconst Context = ({ children }) => {\n  const [seconds, setSeconds] = useState(15);\n  const [isActive, setIsActive] = useState(true);\n  const [countStep, setCountStep] = useState(0);\n  const [arrGame, setGame] = useState(data);\n  const [totalBals, setBalls] = useState(0);\n  const [activeAnswer, setAnswer] = useState(true);\n  const [showModal,setShowModal]=useState(true)\n  const updTimer = () => {\n    setSeconds(seconds - 1);\n  };\n  const changeActive = () => {\n    setIsActive(!isActive);\n  };\n  async function  reset() {\n   await setCountStep(countStep + 1);\n\n    if (countStep >= (arrGame.length-1)) {\n      setShowModal(false);\n    }\n    setSeconds(15);\n    setAnswer(true);\n\n  }\n  function countBalls(str) {\n    const value = Number(str);\n    setBalls(totalBals + value);\n  }\n  function changeAnswer() {\n    setAnswer(false);\n  }\n\n  return (\n    <GraphListContext.Provider\n      value={{\n        seconds, countStep, arrGame, showModal,updTimer, countBalls,totalBals, changeAnswer, isActive, activeAnswer, changeActive, reset,\n      }}\n    >\n      {children}\n    </GraphListContext.Provider>\n  );\n};\n\nexport { Context, GraphListContext };\n","import React, { useEffect, useContext } from 'react';\nimport { GraphListContext } from '../../contex/Contex';\n\nconst Timer = () => {\n  const { seconds, updTimer, isActive, changeActive,reset } = useContext(GraphListContext);\n\n  useEffect(() => {\n    let interval = null;\n    if (seconds === 0) {\n      reset();\n    }\n    if (isActive) {\n      interval = setInterval(() => {\n        updTimer();\n      }, 1000);\n    } else if (!isActive && seconds !== 0) {\n      clearInterval(interval);\n    }\n    return () => clearInterval(interval);\n  }, [isActive, seconds]);\n  return (\n    <div>\n      <div className=\"time\">\n        {seconds}\n\n      </div>\n\n    </div>\n  );\n};\n\nexport default Timer;\n","import React from 'react';\n// import { useSpring, animated } from 'react-spring';\n\nconst ItemRigth = ({count,step}) => {\n  // useSpring({ from: { transform: scaleY(1) },\n  //   to: { transform: scaleY(0) },\n  //   delay: 30000 });\n       const classNames=`${count===step? 'active':step<count ?'dis':''} panel-right__item`\n  return (\n    <div className={classNames} />\n  );\n};\n\nexport default ItemRigth;\n","import React, {useContext, useState} from 'react';\nimport ItemRigth from \"./ItemRigth\";\nimport {nanoid} from \"nanoid\";\nimport {GraphListContext} from \"../../contex/Contex\";\nimport {data} from \"../Game/data\";\n\nconst PanelRigth = React.memo(({data, step}) => {\n\n  return (\n    <section className=\"panel-right\">\n      <div className=\"panel-right__wrapper\">\n        <div className=\"panel-right__list\">\n          {data.map((el,index) => <ItemRigth step={index} count={step} key={nanoid()}/>)}\n\n        </div>\n      </div>\n\n    </section>\n  );\n});\n\nexport default PanelRigth;\n","import React, { useContext } from 'react';\nimport { GraphListContext } from '../../contex/Contex';\n\nconst QuestPanel = React.memo(({ data, step }) => {\n\n  const {countBalls, changeAnswer, activeAnswer} = useContext(GraphListContext);\n  const clickAnswer = (el, ev) => {\n      if(!activeAnswer){\n          return\n      }\n    ev.target.classList.add('active');\n    changeAnswer();\n    countBalls(el);\n  };\n  let classNameItem = `${activeAnswer ? '' : 'dis'} quest__answer`;\n  return (\n    <>\n      <div className=\"quest__panel\">\n        <div className=\"quest__question\">{data[step].question}</div>\n        <div className=\"quest__list\">\n          {data[step].answer.map((el) => <div key={el.text} onClick={(ev) => clickAnswer(el.ball, ev)} className=\"quest__answer\" data-ball={el.ball}>{el.text}</div>)}\n        </div>\n      </div>\n\n    </>\n  );\n});\n\nexport default QuestPanel;\n","import React, { useContext } from 'react';\nimport { Link } from 'react-router-dom';\nimport { GraphListContext } from '../../contex/Contex';\n\nconst Modal = () => {\n  const { arrGame,totalBals } = useContext(GraphListContext);\n  const value =(Math.floor(totalBals/32*10)-1)\n  console.log(value)\n  return (\n    <div className=\"modal\">\n      <div className=\"modal__wrapper\">\n        <div className=\"modal__line\">\n          <div className=\"modal__label\">Прогресс ТВОЕГО ПРОЕКтА</div>\n          <div className=\"modal__list\">\n            {arrGame.map((el, index) => {\n              if (value >= index) {\n                return <div className=\"modal__item active\" />;\n              }\n              return <div className=\"modal__item\" />;\n            })}\n          </div>\n        </div>\n        <div className=\"modal__anhors\">\n          <Link to=\"/\">вернуться в личный кабинет</Link>\n          <Link to=\"/\">продолжить</Link>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Modal;\n","import React, {\n  useContext, useEffect, useState,\n} from 'react';\nimport HeaderGame from '../HeaderGame';\nimport Timer from '../Timer/Timer';\nimport PanelRigth from '../PanelRigth';\nimport QuestPanel from '../QuestPanel/QuestPanel';\nimport { GraphListContext } from '../../contex/Contex';\nimport Modal from '../Modal';\n\nconst Game = () => {\n  const { arrGame, countStep, showModal } = useContext(GraphListContext);\n\n  // function toggle() {\n  //   setIsActive(!isActive);\n  // }\n  //\n  // function reset() {\n  //   if (countStep > arrGame.length) {\n  //\n  //   }\n  //   setSeconds(30);\n  //   //    setIsActive(false);\n  //   //     setCountStep(countStep+1)\n  // }\n  console.log('w333');\n  return (\n    <div className=\"game\">\n      <HeaderGame />\n      <main>\n          {showModal\n              ?<Timer/>:null}\n        {showModal\n          ? (\n            <div className=\"wrapper__panel\">\n              <PanelRigth data={arrGame} step={countStep} />\n                {countStep < arrGame.length ?<QuestPanel data={arrGame} step={countStep} />:null}\n            </div>\n          )\n          : <Modal />}\n      </main>\n    </div>\n  );\n};\n\nexport default Game;\n","import React from 'react';\nimport {\n  Route,\n  Switch,\n  Redirect,\n} from 'react-router-dom';\n\n// Styles\nimport 'normalize.css';\nimport './styles/Main.scss';\n// import ScrollToTop from './components/Layout/ScrollTop';\n// Pages\n// import Home from './pages/Home';\n// import NotFound from './pages/NotFound';\nimport Game from \"./components/Game\";\n\n\nfunction App() {\n  return (\n    <>\n      <Switch>\n        <Route exact path=\"/\" component={() => <Game />} />\n\n        {/*<Route exact path=\"/not-found\" component={() => <NotFound />} status={404} />*/}\n        {/*<Redirect to=\"/not-found\" />*/}\n      </Switch>\n      {/*<ScrollToTop />*/}\n\n    </>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost'\r\n    // [::1] is the IPv6 localhost address.\r\n    || window.location.hostname === '[::1]'\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    || window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\r\n    ),\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        // eslint-disable-next-line no-use-before-define\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service '\r\n              + 'worker. To learn more, visit https://bit.ly/CRA-PWA',\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        // eslint-disable-next-line no-use-before-define\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then((registration) => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all '\r\n                  + 'tabs for this page are closed. See https://bit.ly/CRA-PWA.',\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch((error) => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then((response) => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404\r\n        || (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then((registration) => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.',\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then((registration) => {\r\n        registration.unregister();\r\n      })\r\n      .catch((error) => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\n\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {Context} from \"./contex/Contex\";\n\nReactDOM.render(\n  <BrowserRouter>\n      <Context>\n          <App />\n      </Context>\n  </BrowserRouter>,\n  document.getElementById('root'),\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}